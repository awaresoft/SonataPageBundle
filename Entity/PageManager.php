<?php

namespace Awaresoft\Sonata\PageBundle\Entity;

use Sonata\PageBundle\Entity\PageManager as BasePageManager;
use Symfony\Bridge\Doctrine\ManagerRegistry;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * Extended PageManager class
 *
 * @author Bartosz Malec <b.malec@awaresoft.pl>
 */
class PageManager extends BasePageManager
{
    /**
     * @var ContainerInterface
     */
    protected $container;

    /**
     * @param string $class
     * @param ManagerRegistry $registry
     * @param array $defaults
     * @param array $pageDefaults
     * @param ContainerInterface $container
     */
    public function __construct($class, ManagerRegistry $registry, array $defaults = array(), array $pageDefaults = array(), ContainerInterface $container)
    {
        parent::__construct($class, $registry, $defaults, $pageDefaults);

        $this->container = $container;
    }

    /**
     * Return page by url and autogenerated site
     *
     * @param $url
     *
     * @return null|object|\Sonata\PageBundle\Model\PageInterface
     */
    public function getMultisitePageByUrl($url)
    {
        return $this->getMultisitePageBy($url);
    }

    /**
     * Return page by route and autogenerated site
     *
     * @param $route
     *
     * @return null|object|\Sonata\PageBundle\Model\PageInterface
     */
    public function getMultisitePageByRoute($route)
    {
        return $this->getMultisitePageBy($route, 'route');
    }

    /**
     * @param $value
     * @param string $by
     *
     * @return null|object|\Sonata\PageBundle\Model\PageInterface
     */
    protected function getMultisitePageBy($value, $by = 'url')
    {
        $cmsPage = $this->container->get('sonata.page.cms_manager_selector')->retrieve();
        $page = $cmsPage->getCurrentPage();
        $site = $page->getSite();

        if ($by == 'url') {
            return $this->getPageByUrl(null, $value);
        }

        if ($by == 'route') {
            return $this->findOneBy([
                'routeName' => $value,
                'site' => $site,
            ]);
        }

        return null;
    }
}
